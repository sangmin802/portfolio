{"version":3,"sources":["Components/LeftSide.js","Components/RightSide.js","App.js","index.js"],"names":["LeftSide","this","props","data","mobile","pc","pcImg","imgWrap","mobileImg","className","map","res","index","key","src","alt","onClick","check","bind","name","console","log","React","Component","RightSide","App","state","isLoading","id","fetch","then","response","json","setState","getData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAIqBA,G,mLACV,IAAD,SACgDC,KAAKC,MAApDC,EADD,EACCA,KADD,IACOA,KAAQC,EADf,EACeA,OAAQC,EADvB,EACuBA,GAAIC,EAD3B,EAC2BA,MAC7BC,GAFE,EACkCC,UAC1B,MAwCd,OAvCGH,GAAMD,EACPG,EACA,yBAAKE,UAAU,WACb,yBAAKA,UAAU,MACb,yBAAKA,UAAU,WACZH,EAAMI,KAAI,SAACC,EAAKC,GACf,OACE,yBAAKH,UAAS,iBAAYG,GAASC,IAAKF,EAAKG,IAAG,eAAUH,GAAOI,IAAKJ,SAK9E,yBAAKF,UAAU,YAIVJ,IAAOD,EACdG,EACA,yBAAKE,UAAU,WACb,yBAAKA,UAAU,MACb,yBAAKA,UAAU,WACZH,EAAMI,KAAI,SAACC,EAAKC,GACf,OACE,yBAAKH,UAAS,iBAAYG,GAASC,IAAKF,EAAKG,IAAG,eAAUH,GAAOI,IAAKJ,EAAKK,QAAS,EAAKC,MAAMC,KAAK,YAMtGb,GAAMD,IACdG,EACA,yBAAKE,UAAU,WACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,eAOnB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,SAASN,EAAKgB,MAC7B,yBAAKV,UAAU,WACZF,EACD,yBAAKE,UAAU,a,8BASrBW,QAAQC,IAAI,S,GAzDsBC,IAAMC,YCFvBC,E,uKAEjB,OACE,8C,GAHiCF,IAAMC,WCIxBE,E,4MACnBC,MAAQ,CACNC,WAAY,EACZxB,KAAO,I,uDAEA,IAAD,EACoBF,KAAKyB,MAAxBC,EADD,EACCA,UAAWxB,EADZ,EACYA,KAClB,OAAGwB,EAEC,yBAAKlB,UAAU,WAAf,cAIF,yBAAKA,UAAU,WACZN,EAAKO,KAAI,SAAAC,GAER,OADaA,EAAIiB,GAAG,GAElB,KAAK,EACH,OAAO,kBAAC,EAAD,CAAUf,IAAKF,EAAIiB,GAAIzB,KAAMQ,IAEtC,KAAK,EACH,OAAO,kBAAC,EAAD,CAAWE,IAAKF,EAAIiB,GAAIzB,KAAMQ,IAEvC,QACE,OAAO,Y,gCAQT,IAAD,OACPkB,MAAM,mBACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA3B,GACJ,EAAK8B,SAAS,CAAC9B,KAAOA,EAAMwB,WAAY,S,0CAK1C1B,KAAKiC,c,GAzCwBZ,IAAMC,WCDvCY,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.97959c7f.chunk.js","sourcesContent":["import React from 'react';\n\nimport './css/sidecss.css';\n\nexport default class LeftSide extends React.Component {\n  render(){\n    const {data, data : {mobile, pc, pcImg, mobileImg}} = this.props;\n    let imgWrap = null;\n    if(pc && mobile){\n      imgWrap = \n      <div className=\"portImg\">\n        <div className=\"pc\">\n          <div className=\"imgWrap\">\n            {pcImg.map((res, index) => {\n              return (\n                <img className={`img img${index}`} key={res} src={`/img/${res}`} alt={res} />\n              )\n            })}\n          </div>\n        </div>\n        <div className=\"mobile\">\n\n        </div>\n      </div>;\n    }else if(pc && !mobile){\n      imgWrap = \n      <div className=\"portImg\">\n        <div className=\"pc\">\n          <div className=\"imgWrap\">\n            {pcImg.map((res, index) => {\n              return (\n                <img className={`img img${index}`} key={res} src={`/img/${res}`} alt={res} onClick={this.check.bind(this)}/>\n              )\n            })}\n          </div>\n        </div>\n      </div>;\n    }else if(!pc && mobile){\n      imgWrap = \n      <div className=\"portImg\">\n        <div className=\"onlyMobile\">\n          <div className=\"imgWrap\">\n            \n          </div>\n        </div>\n      </div>;\n    }\n    return(\n      <div className=\"portfolio\">\n        <div className=\"title\">{data.name}</div>\n        <div className=\"contBox\">\n          {imgWrap}\n          <div className=\"desc\">\n            \n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  check(){\n    console.log('?')\n  }\n};","import React from 'react';\n\nexport default class RightSide extends React.Component {\n  render(){\n    return(\n      <div>\n        rightSide\n      </div>\n    );\n  };\n};","import React from 'react';\nimport './App.css';\n\nimport LeftSide from './Components/LeftSide.js';\nimport RightSide from './Components/RightSide.js'\n\nexport default class App extends React.Component {\n  state = {\n    isLoading : true,\n    data : []\n  }\n  render(){\n    const {isLoading, data} = this.state;\n    if(isLoading){\n      return (\n        <div className=\"loading\">Loading...</div>\n      )\n    }\n    return (\n      <div className=\"appWrap\">\n        {data.map(res => {\n          const type = res.id%2;\n          switch(type){\n            case 1 : {\n              return <LeftSide key={res.id} data={res} />\n            }\n            case 0 : {\n              return <RightSide key={res.id} data={res} />\n            }\n            default : {\n              return null;\n            }\n          }\n        })}\n      </div>\n    );\n  }\n\n  getData(){\n    fetch('/json/data.json')\n    .then(response => response.json())\n    .then(data => {\n      this.setState({data : data, isLoading : false});\n    })\n  }\n\n  componentDidMount(){\n    this.getData();\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}